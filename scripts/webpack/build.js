// 1. webpack
// 2. –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
// 3. —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–ø–∞–π–ª–µ—Ä webpack
// 4. –∑–∞–ø—É—Å–∫ üöÄ

// Core
const webpack = require("webpack");
const chalk = require("chalk"); // –†–∞—Å–∫—Ä–∞—à–∏–≤–∞–µ—Ç –∫–æ–Ω—Å–æ–ª—å

// Config
const getConfig = require("./webpack.config");

const compiler = webpack(getConfig());

// compiler.hooks.beforeRun.tap({ name: "start" }, () => {
//   console.log("‚û° compilation started");
// });

// compiler.hooks.done.tap({ name: "done" }, () => {
//   console.log("‚û° compilation completed");
// });

compiler.run((error, stats) => {
  if (error) {
    // –æ—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    console.log(error.stack || error);

    if (error.details) {
      console.error(error.details);
    }

    return null;
  }

  const info = stats.toString({
    hash: true,
    colors: true,
    version: true,
    env: true,
    modules: false,
    entrypoints: false,
  });

  console.log(chalk.greenBright("‚úî Build completed"));
  console.log(info);

  if (stats.hasErrors()) {
    // –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ (–±–∏—Ç—ã–π –∏–º–ø–æ—Ä—Ç, –æ—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∏ —Ç.–¥.)
    console.log(chalk.redBright("‚û° Error!"));
    // console.error(info);
  }

  if (stats.hasWarnings()) {
    // –í–æ—Ä–Ω–∏–Ω–≥ –≤–æ –≤—Ä–µ–º—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
    console.log(chalk.yellowBright("‚û° Warning!"));
    // console.warn(info);
  }
});
